version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/gateway.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - gateway
    networks:
      - internal
      - external

  gateway:
    build: ./gateway
    depends_on:
      - redis
      - users
      - orders
    environment:
      - APP_ENV=${APP_ENV}
    volumes:
      - ./logs/gateway:/app/logs
    networks:
      - external
      - internal
    expose:
      - "8080"
    deploy:
      replicas: ${SCALE_GATEWAY}
      restart_policy:
        condition: on-failure

  users:
    build: ./services/users
    environment:
      - APP_ENV=${APP_ENV}
    volumes:
      - ./logs/users:/app/logs
    networks:
      - internal
    deploy:
      replicas: ${SCALE_USERS}
      restart_policy:
        condition: on-failure

  orders:
    build: ./services/orders
    environment:
      - APP_ENV=${APP_ENV}
    volumes:
      - ./logs/orders:/app/logs
    networks:
      - internal
    deploy:
      replicas: ${SCALE_ORDERS}
      restart_policy:
        condition: on-failure

  redis:
    image: redis:latest
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - internal

networks:
  internal:
    driver: bridge
  external:
    driver: bridge
